// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gone-io/goner/viper (interfaces: WatcherKeeper)
//
// Generated by this command:
//
//	mockgen -destination=mock_watcher_keeper_test.go -package=viper github.com/gone-io/goner/viper WatcherKeeper
//

// Package viper is a generated GoMock package.
package viper

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWatcherKeeper is a mock of WatcherKeeper interface.
type MockWatcherKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockWatcherKeeperMockRecorder
	isgomock struct{}
}

// MockWatcherKeeperMockRecorder is the mock recorder for MockWatcherKeeper.
type MockWatcherKeeperMockRecorder struct {
	mock *MockWatcherKeeper
}

// NewMockWatcherKeeper creates a new mock instance.
func NewMockWatcherKeeper(ctrl *gomock.Controller) *MockWatcherKeeper {
	mock := &MockWatcherKeeper{ctrl: ctrl}
	mock.recorder = &MockWatcherKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWatcherKeeper) EXPECT() *MockWatcherKeeperMockRecorder {
	return m.recorder
}

// Put mocks base method.
func (m *MockWatcherKeeper) Put(key string, value any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Put", key, value)
}

// Put indicates an expected call of Put.
func (mr *MockWatcherKeeperMockRecorder) Put(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockWatcherKeeper)(nil).Put), key, value)
}
