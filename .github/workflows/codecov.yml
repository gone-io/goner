name: Test and coverage

on:
  push:
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'

# 设置工作流的权限为只读
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ["1.21.x", "1.22.x", "1.23.x", "1.24.x"]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      elasticsearch:
        image: elasticsearch:8.12.1
        env:
          discovery.type: single-node
          xpack.security.enabled: false
        ports:
          - 9200:9200
        options: >-
          --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Install SQLite
        run: sudo apt-get update && sudo apt-get install -y sqlite3 libsqlite3-dev
      - name: Gather dependencies
        run: go mod download
      - name: Run coverage
        run: find . -name go.mod -not -path "*/example/*" -not -path "*/examples/*" | xargs -n1 dirname | xargs -L1 bash -c 'cd "$0" && pwd && go test -race -coverprofile=coverage.txt -covermode=atomic ./... || exit 255' || echo "Tests failed"
      - name: Merge coverage
        run: find . -name "coverage.txt" -exec cat {} \; > total_coverage.txt
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: ./total_coverage.txt
