// Code generated by gonectl. DO NOT EDIT.
// Source: i_server.go

package mock

import (
	"github.com/gone-io/gone/v2"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIService is a mock of IService interface.
type MockIService struct {
	ctrl     *gomock.Controller
	recorder *MockIServiceMockRecorder
	isgomock struct{}
	gone.Flag
}

// MockIServiceMockRecorder is the mock recorder for MockIService.
type MockIServiceMockRecorder struct {
	mock *MockIService
}

// NewMockIService creates a new mock instance.
func NewMockIService(ctrl *gomock.Controller) *MockIService {
	mock := &MockIService{ctrl: ctrl}
	mock.recorder = &MockIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIService) EXPECT() *MockIServiceMockRecorder {
	return m.recorder
}

// SayHello mocks base method.
func (m *MockIService) SayHello(name string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SayHello", name)
	ret0, _ := ret[0].(string)
	return ret0
}

// SayHello indicates an expected call of SayHello.
func (mr *MockIServiceMockRecorder) SayHello(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SayHello", reflect.TypeOf((*MockIService)(nil).SayHello), name)
}
