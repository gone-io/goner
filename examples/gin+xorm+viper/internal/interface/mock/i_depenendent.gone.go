// Code generated by gonectr. DO NOT EDIT.
// Source: service/i_depenendent.go

package mock

import (
	"github.com/gone-io/gone/v2"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIDependent is a mock of IDependent interface.
type MockIDependent struct {
	ctrl     *gomock.Controller
	recorder *MockIDependentMockRecorder
	isgomock struct{}
	gone.Flag
}

// MockIDependentMockRecorder is the mock recorder for MockIDependent.
type MockIDependentMockRecorder struct {
	mock *MockIDependent
}

// NewMockIDependent creates a new mock instance.
func NewMockIDependent(ctrl *gomock.Controller) *MockIDependent {
	mock := &MockIDependent{ctrl: ctrl}
	mock.recorder = &MockIDependentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDependent) EXPECT() *MockIDependentMockRecorder {
	return m.recorder
}

// DoSomething mocks base method.
func (m *MockIDependent) DoSomething() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomething")
	ret0, _ := ret[0].(error)
	return ret0
}

// DoSomething indicates an expected call of DoSomething.
func (mr *MockIDependentMockRecorder) DoSomething() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething", reflect.TypeOf((*MockIDependent)(nil).DoSomething))
}
