// Code generated by MockGen. DO NOT EDIT.
// Source: ../registry.go
//
// Generated by this command:
//
//	mockgen -package=mock -source=../registry.go -destination=./registry_mock.go
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	g "github.com/gone-io/goner/g"
	gomock "go.uber.org/mock/gomock"
)

// MockServiceRegistry is a mock of ServiceRegistry interface.
type MockServiceRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockServiceRegistryMockRecorder
	isgomock struct{}
}

// MockServiceRegistryMockRecorder is the mock recorder for MockServiceRegistry.
type MockServiceRegistryMockRecorder struct {
	mock *MockServiceRegistry
}

// NewMockServiceRegistry creates a new mock instance.
func NewMockServiceRegistry(ctrl *gomock.Controller) *MockServiceRegistry {
	mock := &MockServiceRegistry{ctrl: ctrl}
	mock.recorder = &MockServiceRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceRegistry) EXPECT() *MockServiceRegistryMockRecorder {
	return m.recorder
}

// Deregister mocks base method.
func (m *MockServiceRegistry) Deregister(instance g.Service) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deregister", instance)
	ret0, _ := ret[0].(error)
	return ret0
}

// Deregister indicates an expected call of Deregister.
func (mr *MockServiceRegistryMockRecorder) Deregister(instance any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deregister", reflect.TypeOf((*MockServiceRegistry)(nil).Deregister), instance)
}

// Register mocks base method.
func (m *MockServiceRegistry) Register(instance g.Service) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", instance)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockServiceRegistryMockRecorder) Register(instance any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockServiceRegistry)(nil).Register), instance)
}
